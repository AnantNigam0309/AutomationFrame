package generics;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class selenuimHelper extends constant{
	
	public static void openBrowser(String browserType){
	  try{
		log.info("Opening Browser :"+browserType);
		if (browserType.equalsIgnoreCase("FF") || browserType.equalsIgnoreCase("Firefox")){
			driver=new FirefoxDriver();
			driver.manage().window().maximize();
		}else if (browserType.equalsIgnoreCase("chrome")){
			System.setProperty("webdriver.chrome.driver", chromeDriverpath);
			ChromeOptions cOption=new ChromeOptions();
			cOption.addArguments("--test-type");
			DesiredCapabilities capability= DesiredCapabilities.chrome();
			capability.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);
			capability.setCapability(ChromeOptions.CAPABILITY, cOption);
			driver=new ChromeDriver(cOption);
			driver.manage().window().maximize();
		}else if (browserType.equalsIgnoreCase("IE")){
			System.setProperty("webdriver.ie.driver", ieDriverpath);
			driver =new InternetExplorerDriver();
			driver.manage().window().maximize();
		} else{
			log.warning("Browser Type Invalid .. Please check testng.xml file and make changes in parameters");
		}
      }catch(Exception exp){
    	  CaptureScreenshot("openBrowser");
    	  log.info("Exception Captured while opening Browser for browser type"+browserType 
    			  +" Exception Message recieved is :"+exp.getMessage());
      }
	}
	
	public static void openURL(String URL){
		try{
			log.info("Opening URL :"+URL);
			driver.get(URL);
			log.info(driver.getCurrentUrl() +"is opened");
		} catch (Exception exp){
			log.info("Exception catched while opening URL :"+URL
					+" with Exception message as :"+exp.getMessage());
		}
	}
	
	public static void passTextToWebelement(WebElement element,String inputData){
		try{
			waitForElementExplicitly(element);
			String[] txt=element.toString().split("->");
			String str = txt[1].replaceAll("]]","]");
			log.info("Checking for Element displayed");
			
			if(element.isDisplayed()){
				log.info("Entering :"+inputData+" to field :"+str);
				element.clear();
				element.sendKeys(inputData);
			}else{
				log.info("Element is not Displayed ..");
			}
		}catch (Exception exp){
			log.info("Exception occured while Entering value in Webelement"+element
					+" and Exception Message recieved is :"+exp.getMessage());
		}
		
	}
	
	public static void selectFromDropBox(WebElement element, String inputData){
		try{
			
		}catch (Exception exp){
			log.info("Exception Occured while Selecting from Dropbox for Element :"+element
					+", Exception Message Displayed :"+exp.getMessage());
		}
	}
	
	public static void waitForElementExplicitly(WebElement element){
		try{
			String[] txt=element.toString().split("->");
			String elementString = txt[1].replaceAll("]]","]");
			log.info("Waiting Explicitly till 90 secs for the Element +"+elementString);
			WebDriverWait wait =new WebDriverWait(driver, 90);
			wait.until(ExpectedConditions.elementToBeClickable(element));
		}catch (Exception exp){
			log.info("Exception Occured while waiting for element :"+element
					+", Message Displayed is :"+exp.getMessage());
		}
	}
	
	public static void CaptureScreenshot(String ImageName){
		try{
			String imagePath=screenShotPath+ImageName+".png";
			log.info("Capturing ScreenShot trigerred");
			File source=((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
			FileUtils.copyFile(source, new File(imagePath));
		} catch (IOException exp){
			log.warning("Exception Occured while taking Screenshot With Message ::"+exp.getMessage());
		} catch(Exception exp){
			exp.printStackTrace();
		}
	}
	

}
