package Engine;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Logger;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import apiary.Firebase;
import cucumber.api.CucumberOptions;
import cucumber.api.testng.TestNGCucumberRunner;
import exceptionsDefined.FirebaseException;
import exceptionsDefined.JacksonUtilityException;
import generics.constant;
import generics.selenuimHelper;

@CucumberOptions(features="src/test/resources/features/",
glue="defintions",
format= {"pretty","html:target/CampaignDestination","json:target/CampaignDestination/Campaign.json"},
tags={"@CsTest"},
monochrome=true,
strict=false
)
public class testNGTestRunnerCampaign extends selenuimHelper {


	private testNGTestRunnerCampaign(){
		System.out.println("Object initialized for testNG Runner Campaign :)");
		constant.log=Logger.getLogger(testNGTestRunnerCampaign.class.getSimpleName().toString());
	}

	@Parameters({"platform","browser","branch","buildNumber"})
	@BeforeMethod
	public void beforeMethod(String platform,String browser,String branch,String buildNumber) throws InterruptedException{
		constant.platform=platform;
		constant.browser=browser;
		constant.branch=branch;
		constant.buildNumber=buildNumber;
		
		taskManagerBeforeExecution.setLogger();
		taskManagerBeforeExecution.deleteXMLDirectoryFiles();
		initializer.initialize();// This should go to before Execution
		// Screenshot path should be cleared 
		
		openBrowser("chrome");
	}

	@Test(groups = "cucumber", description = "Runs Cucumber Features")
	public void run_cukes() throws IOException {
	  new TestNGCucumberRunner(getClass()).runCukes();
	}
	
	@AfterMethod
	public void afterMethod() throws JacksonUtilityException, FirebaseException, UnsupportedOperationException, IOException{
		taskManagerAfterExecution.completeExecution();
		Firebase f=new Firebase("http://34.205.255.27:8080");
		f.addQuery("parkingLotName", "First");
		Map<String,Object> map=new HashMap<String,Object>();
		System.out.println(f.post("parkinglot/register",map));
		
	}
}
